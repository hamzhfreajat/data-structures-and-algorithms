/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.HashTable;

import com.HashTable.structure.HashMap;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashSet;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {

    @Test
    public void getKeyValue(){
        HashMap<String , String> hashMap = new HashMap<>();
        hashMap.put("hamzh" , "java developer");
        String val = hashMap.print("hamzh");
        String exp = "{ hamzh=>java developer } -> { NULL }";
        assertEquals(val , exp);
    }

    @Test
    public void getValue(){
        HashMap<String , String> hashMap = new HashMap<>();
        hashMap.put("hamzh" , "java developer");
        String val = hashMap.get("hamzh");
        String exp = "java developer";
        assertEquals(val , exp);
    }

    @Test
    public void getValueNull(){
        HashMap<String , String> hashMap = new HashMap<>();
        hashMap.put("hamzh" , "java developer");
        String val = hashMap.get("ahmad");
        assertNull(val);
    }

    @Test
    public void getAllKeys(){
        HashMap<String , String> hashMap = new HashMap<>();
        hashMap.put("hamzh" , "java developer");
        hashMap.put("hamzh" , "java develop");
        hashMap.put("ahmad" , "java developer");
        hashMap.put("mohammed" , "java developer");
        hashMap.put("Ibrahem" , "java developer");
        hashMap.put("JAVA" , "hello evry one");
        hashMap.put("Amman" , "hello evry one" );
        HashSet<String> hashSet = hashMap.keys();
        String exp = "[JAVA, hamzh, Amman, Ibrahem, ahmad, mohammed]";

        assertEquals(hashSet.toString() , exp);
    }

    @Test
    public void handleCollision(){
        HashMap<String , String> hashMap = new HashMap<>();
        hashMap.put("Ibrahem" , "java developer");
        hashMap.put("JAVA" , "hello evry one");
        hashMap.put("Amman" , "hello evry one" );
        String val = hashMap.print("Ibrahem");
        String exp = "{ Ibrahem=>java developer } -> { Amman=>hello evry one } -> { JAVA=>hello evry one } -> { NULL }";

        assertEquals(val , exp);
    }

    @Test
    public void getCollisionValue(){
        HashMap<String , String> hashMap = new HashMap<>();
        hashMap.put("Ibrahem" , "java developer");
        hashMap.put("JAVA" , "hello evrey one this is java");
        hashMap.put("Amman" , "hello evry one" );
        String val = hashMap.get("JAVA");
        String exp = "hello evrey one this is java";
        assertEquals(val , exp);
    }

    @Test
    public void inRangeValue(){
        HashMap<String , String> hashMap = new HashMap<>();
        String[] number = new String[]{"hamzh" , "ahmad" , "mahmood" , "ali" , "mahmood"} ;


        boolean value = true ;
        for (int i = 0; i < hashMap.getSize(); i++) {
           int indexNumber = hashMap.getBucketIndex(number[i]);
           if (!(indexNumber < hashMap.getBuckets())){
               value = false;
           }
        }
        assertTrue(value);
    }

}
